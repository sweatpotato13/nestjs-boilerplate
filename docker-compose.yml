version: "3"
services:
    postgres:
        image: postgres:13
        container_name: postgres
        restart: always
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_PORT: ${POSTGRES_PORT}
            POSTGRES_USER: ${POSTGRES_USER}
        volumes:
            - ./postgres-data:/var/lib/postgresql/data
        ports:
            - ${POSTGRES_PORT}:5432
    mongo:
        image: mongo
        container_name: mongo
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PW}
        ports:
            - ${MONGODB_PORT}:27017
    mongo-express:
        image: mongo-express
        container_name: mongo-express
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGODB_USER}
            ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGODB_PW}
        ports:
            - ${MONGOEXPRESS_PORT}:8081
    graphql-engine:
        image: hasura/graphql-engine:v2.0.9
        container_name: hasura
        restart: always
        ports:
            - ${HASURA_PORT}:8080
        depends_on:
            - postgres
        restart: always
        environment:
          HASURA_GRAPHQL_DATABASE_URL: postgres://postgres:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}
          HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
          HASURA_GRAPHQL_DEV_MODE: "true"
          HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
          HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonymous
    redis:
        container_name: redis
        image: redis
        restart: always
        ports:
        - "${REDIS_PORT}:6379"
        environment:
        - REDIS_PASSWORD=${REDIS_PASSWORD}
        command: redis-server --requirepass $REDIS_PASSWORD
    redis-commander:
        image: rediscommander/redis-commander
        restart: always
        ports:
        - "${REDIS_COMMANDER_PORT}:8081"
        environment:
        - REDIS_HOST=${REDIS_HOST}
        - REDIS_PASSWORD=${REDIS_PASSWORD}
        - REDIS_PORT=${REDIS_PORT}
        - HTTP_USER=${REDIS_COMMANDER_USER}
        - HTTP_PASSWORD=${REDIS_COMMANDER_PASSWORD}
    es01:
      image: docker.elastic.co/elasticsearch/elasticsearch:8.3.2
      container_name: es01
      environment:
        - discovery.type=single-node
        - bootstrap.memory_lock=true
        - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        - xpack.security.enabled=false # Set true when you using https
      ulimits:
        memlock:
          soft: -1
          hard: -1
      volumes:
        - ./es-data:/usr/share/elasticsearch/data
      ports:
        - 9200:9200
    kibana:
      image: docker.elastic.co/kibana/kibana:7.15.2
      container_name: kibana
      ports:
        - 5601:5601
      environment:
        ELASTICSEARCH_URL: http://es01:9200
        ELASTICSEARCH_HOSTS: http://es01:9200
    nest:
        container_name: nest
        restart: always
        build:
            dockerfile: Dockerfile
            context: ./
        env_file: 
            - .env
        ports:
            - ${PORT}:8000
