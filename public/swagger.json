{
    "openapi": "3.1.0",
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Local Server"
        }
    ],
    "info": {
        "version": "0.0.1",
        "title": "nestjs-boilerplate",
        "description": "",
        "license": {
            "name": "UNLICENSED"
        }
    },
    "paths": {
        "/": {
            "get": {
                "summary": "Health check endpoint",
                "description": "Health check endpoint.",
                "tags": [],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "A Promise that resolves to the health check result.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "x-samchon-accessor": ["healthCheck"],
                "x-samchon-controller": "AppController"
            }
        },
        "/auth/login/google": {
            "get": {
                "summary": "Handles the Google login request",
                "description": "Handles the Google login request.\nThis route is protected by the Google authentication guard.",
                "tags": ["auth"],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "The result of the login request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponseDto"
                                }
                            }
                        }
                    }
                },
                "x-samchon-accessor": [
                    "auth",
                    "login",
                    "google",
                    "handleLogin"
                ],
                "x-samchon-controller": "AuthController"
            }
        },
        "/users": {
            "get": {
                "summary": "Get user by email",
                "description": "Get user by email.",
                "tags": ["user"],
                "parameters": [
                    {
                        "name": "email",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Promise that resolves to the user with the specified email.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUserResponseDto"
                                }
                            }
                        }
                    }
                },
                "x-samchon-accessor": ["users", "getUserByEmail"],
                "x-samchon-controller": "UserController"
            }
        },
        "/users/{id}": {
            "get": {
                "summary": "Get user by ID",
                "description": "Get user by ID.",
                "tags": ["user"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "title": "- The ID of the user",
                        "description": " - The ID of the user."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Promise that resolves to the user with the specified ID.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUserResponseDto"
                                }
                            }
                        }
                    }
                },
                "x-samchon-accessor": ["users", "getUserById"],
                "x-samchon-controller": "UserController"
            },
            "put": {
                "summary": "Update user profile",
                "description": "Update user profile.",
                "tags": ["user"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "title": "- The ID of the user",
                        "description": " - The ID of the user."
                    }
                ],
                "requestBody": {
                    "description": "- The updated profile data.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProfileBodyDto"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "A Promise that resolves to the updated user profile.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponseDto.o1"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "x-samchon-accessor": ["users", "updateUserProfile"],
                "x-samchon-controller": "UserController"
            },
            "delete": {
                "summary": "Delete user",
                "description": "Delete user.",
                "tags": ["user"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "schema": {
                            "type": "string"
                        },
                        "required": true,
                        "title": "- The ID of the user to delete",
                        "description": " - The ID of the user to delete."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A Promise that resolves to the result of the delete operation.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BaseResponseDto.o1"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "x-samchon-accessor": ["users", "deleteUser"],
                "x-samchon-controller": "UserController"
            }
        }
    },
    "components": {
        "schemas": {
            "BaseResponseDto": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "string",
                        "title": "The result value",
                        "description": "The result value."
                    }
                },
                "required": ["result"],
                "description": "Represents the response DTO for a result."
            },
            "GetUserResponseDto": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "string",
                        "title": "The result of the operation",
                        "description": "The result of the operation."
                    },
                    "user": {
                        "title": "The user object",
                        "description": "The user object."
                    }
                },
                "required": ["result", "user"],
                "description": "Represents the response DTO for getting a user."
            },
            "BaseResponseDto.o1": {
                "type": "object",
                "properties": {
                    "result": {
                        "type": "string",
                        "title": "The result value",
                        "description": "The result value."
                    }
                },
                "required": ["result"],
                "description": "Represents the response DTO for a result."
            },
            "ProfileBodyDto": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "The name of the profile",
                        "description": "The name of the profile."
                    }
                },
                "required": ["name"],
                "description": "Represents the data transfer object for the profile body."
            }
        },
        "securitySchemes": {
            "bearer": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "auth"
        },
        {
            "name": "user"
        }
    ],
    "x-samchon-emended": true
}
